{"meta":{"title":"CoolYang","subtitle":null,"description":null,"author":"CoolYang","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"记一次App Store图片侵权案件","slug":"记一次App Store图片侵权案件","date":"2019-04-26T08:46:57.000Z","updated":"2019-04-28T09:51:05.108Z","comments":true,"path":"2019/04/26/记一次App Store图片侵权案件/","link":"","permalink":"http://yoursite.com/2019/04/26/记一次App Store图片侵权案件/","excerpt":"","text":"事情背景 s觉z国 向App Store发邮件举报APP使用未授权图片最近他们公司发生的事想必已经有不少人知道了，像这种碰瓷公司的侵权销售模式，是活不了的 开头先说一下收到侵权邮件之后怎么办： 1、及时回复邮件，如果不存在侵权就简单了，回邮件态度强硬，并让其出示证据。2、如果存在侵权，将侵权内容删除，回复邮件。（个人认为，既然已经盯上了，就很难通过这种方式解决，毕竟要靠这个提升业绩不是么）3、时常关注邮箱，时常关注邮箱，时常关注邮箱，重要的事情说三遍，其实这次从向我们APP发邮件提示开始，到被下架，有2个周+的时间，如果这段时间及时处理，可能不会走到被下架这个结局，但由于忽视了邮箱，APP被下架之后才发现，才导致现在这个结局。 代号解释s觉z国 : 以下用A公司来表示某某APP：我公司被下架APP 我方APP侵权地方，会定期发布一些科普文章，例如：文章是公司运营定期发布的，图片是从网络上找的，不固定是什么网站，一般也就是百度，APP已经好几年了，最近才出这档子事，可能真和网络上说的一样，发现了也不说，先记着，等哪天攒够了，再向你发律师函… 邮件历史下面曝一下和流氓公司的邮件往来历史： 因为是公司的账号和产品，涉及公司信息和相关产品的部分将用代号来表示，这篇博客是个人技术博客，主要是通过阐述一下发生在我公司身上的事实，来总结一下此类问题的解决办法，归纳回复邮件时的模板样例。本人声明未有任何添油加醋，未偏袒任何一方，保持公正态度阐述事实。 2019-04-02收到苹果邮件，APP已经被下架： We regret that the dispute regarding the app listed below could not be resolved amicably between the parties. We have removed your application from the App Store. Note that per the terms of your agreement with Apple that Apple may remove your application from sale if we feel it is necessary or prudent to do so.我们很遗憾，关于以下所列应用程序的争议未能在双方之间友好解决。我们已经将您的应用程序从App Store中移除。请注意，根据您与苹果的协议条款，如果我们认为有必要或谨慎地这么做，苹果可能会将您的应用程序从销售中删除。 历史： 2019-03-13： From: A公司邮箱Date: 2019-03-14 10:07To: AppStoreNoticesSubject: Re: Apple Inc. (our ref# APP110347)内容：Comments from Complainant: 某某APP涉及侵权使用我司版权图片490张，严重损害我司及相关权利人合法权益，现请求对某某APP做下架处理！ 2019-03-14 From: A公司邮箱Date: 2019-03-14 10:07To: AppStoreNoticesSubject: Re: Apple Inc. (our ref# APP110347)Dear James，内容：请尽快对 某某APP 做下架处理，谢谢! 2019-03-15 From: App DisputesDate: 2019-03-26 07:38To: A公司邮箱CC: 我公司邮箱Subject: Apple Inc. (our ref# APP110347)内容：Thank you for your response. Unfortunately, Apple cannot serve as arbiter for disputes among third parties. Please work directly with at the email address provided below to resolve any concerns you may have.（谢谢你的回复。不幸的是，苹果不能作为第三方纠纷的仲裁人。请直接该公司.(以下提供的电子邮件地址)联系，以解决您可能存在的任何问题。） 2019-03-25 From: A公司邮箱Subject: Re: Apple Inc. (our ref# APP110347)Date: Mar 25, 2019 at 11:47 PMTo: AppStoreNotices@apple.comCc: 我公司邮箱内容：Dear Barry,苹果公司无需作为第三方仲裁者调解该问题，侵权问题尚未解决，请尽快对某某APP做下架处理即可，谢谢！ 2019-04-01 APP被下架 2019-04-02 （苹果发来邮件） From: “AppStoreNotices”&#65;&#x70;&#x70;&#83;&#x74;&#x6f;&#114;&#x65;&#78;&#111;&#x74;&#105;&#x63;&#x65;&#x73;&#64;&#x61;&#112;&#112;&#x6c;&#101;&#46;&#x63;&#x6f;&#109;;Date: Tue, Apr 2, 2019 02:28 AMTo: 我公司邮箱Cc: A公司邮箱;Subject: Apple Inc. (our ref# APP110347) Dear Sir or Madam,内容：If the matter is not resolved shortly, Apple may be forced to pull your application(s) from the App Store.（如果这个问题不能很快解决，苹果被迫将你的应用程序从App Store中撤下。） 2019-04-11 17:22将APP中的问题处理好之后 From: 我公司邮箱Date: 2019-04-11 17:22To: A公司邮箱CC: AppStoreNoticesSubject: Re:Apple Inc. (our ref# APP110347)内容：我们已经将app内所有可能存在的侵权内容删除，请查看app的内容进行确认，如还有其他内容未能完全清除，请随时与我们沟通。会尽快处理存在的问题。 37分钟后：2019-04-11 17:59 From: A公司邮箱Date: 2019-04-11 17:22To: AppStoreNotices &#65;&#112;&#112;&#83;&#x74;&#111;&#114;&#x65;&#78;&#x6f;&#116;&#x69;&#99;&#x65;&#115;&#64;&#97;&#x70;&#x70;&#x6c;&#101;&#46;&#x63;&#111;&#109;CC: 我公司邮箱内容：Dear Barry侵权问题并未得到解决，请保持下架状态！ 2019-04-12 8:57 From: 我公司邮箱Date: 2019-04-12 08:57To: AppStoreNoticesCC: A公司邮箱Subject: Re: Re:Apple Inc. (our ref# APP110347)内容：Hi Barry,你可以看一下国内的新闻报道https://3g.china.com/act/news/945/20190412/35645514.html?shouye他们公司就是专门拿着各种各样版权去打专利战的流氓公司，他们的网站「https://www.vcg.com/ 」 目前也处于整改状态无法打开，他们公司的业绩全都是以打各种专利战得来的盈利。这是另外一篇报道：https://baijiahao.baidu.com/s?id=1630563914916668793&amp;wfr=spider&amp;for=pc就连中国的国旗、国徽都是他们公司的版权，已经被国内相关相关部门约谈，https://baijiahao.baidu.com/s?id=1630563670103647549&amp;wfr=spider&amp;for=pc全世界首张黑洞图片也已经被他们拥有了版权，就这么一家流氓公司提出的一异议就把我们的app下架，这样未免有点太过分了。况且，我们app内所有可能侵犯他们独家版权的内容都已经全部删除，app内已经完全不存在侵权内容。如果还有未删除的内容，请 A公司 提供相应的版权证明，如果无法提供，请苹果公司尽快把我们app上架。我们公司隶属于xxx公司，《某某》app为全国绝大多数出院患者提供院外的随诊和健康保障，我们做的事情是有意义的，是光明正大的，请尽快把我们app上架。如果还不能上架，我们会向国家网信部及有关部门投诉，app的下架已经对我们的公司造成了不便。 一小时后：2019-04-12 9:55 From: 我公司邮箱Date: 2019-04-12 08:57To: AppStoreNoticesCC: A公司邮箱Subject: Re: Re:Apple Inc. (our ref# APP110347)Dear Barry，某某APP的图片侵权问题我司已经全部做好司法取证，证据确凿，请保持某某APP下架状态直至该侵权问题完全解决!Best regards! 2019-04-11 From: 我公司邮箱Subject: Re: Re:Apple Inc. (our ref# APP110347)Date: Apr 11, 2019 at 6:27 AMTo: A公司邮箱Cc: AppStoreNotices@apple.com内容：您好：请您提供app侵权内容的截图，app内的所有侵权内容已经全部删除，如果还有其他侵权内容请给出证明，或者给出侵权部分的功能出处，我们会进一步清除app内的侵权内容；如果没有了请不要恶意诽谤，这样做既不诚实，也不道德。请求重新上架app。 2019-04-16 From: 我公司邮箱Subject: Re:Apple Inc. (our ref# APP110347)Date: Apr 16, 2019 at 7:00 PMTo: AppStoreNotices@apple.com内容Hi Barry,我们的app已经清除了所有可能侵犯版权的内容，能否帮忙尽快处理，app已经下架一周的时间了。能不能给一个处理的时间范围，大约什么时候能处理完。期待你的回复 2019-04-17 From: 我公司邮箱Subject: app相关问题已解决，请尽快处理！(our ref# APP110347)Date: Apr 17, 2019 at 11:33 PMTo: AppStoreNotices@apple.comHi Barry,我们app已经下架7天了，能不能尽快处理一下，我们app是专门针对出院患者研发了，在出院之后会追踪患者的健康状态，现在下架一周了，能不能尽快协助处理一下。我们app已经没什么问题了。期待你的回复 2019-04-19 Your app was removed from sale by Apple because we did not receive confirmation from A公司 that this matter had been resolved. However, upon receipt of written notification from A公司 agreeing that the changes made to your app resolve this matter to A公司’s satisfaction, we may return your app to the App Store. Please notify A公司 directly of your changes and have A公司 email us at appstorenotices@apple.com.Sincerely,James(意思就是没有收到申诉公司的确认邮件，无法恢复上架) 2019-04-12 ~ 2019-04-20 期间 解决方案小试1、APP增加新版本后上架 ：2、给苹果打电话，他们也没法解决，除非A公司声明APP已经不再侵权3、领导和A公司交涉，A公司一口价要45万，否则免谈 此时距离A公司最后一次发邮件已经13 + 天了，A公司再也没有回复邮件。 结果：经过多次的交涉之后，事情陷入了死循环，review那边必须要等到某某的申明邮件才能确认为不侵权，APP才能重新上架，但是要等到它去回复邮件，那是不可能的，张口就要四十几万！钱没到账，无论如何他是不会去主动回复的，反正它就耗着，什么都不损失，但是咱们的APP耗不起啊，越想越气，写着文章的时候就去它官方微博看了看，发现底下各方人士都在怼，怼到已经关闭评论，莫名的松了口气，好开心… 没别的办法，APP只能重新上架，改BundleID，新建应用，提交审核，苹果那边现在还没有结果，希望不会被认定为重复应用","categories":[{"name":"记录","slug":"记录","permalink":"http://yoursite.com/categories/记录/"}],"tags":[{"name":"iOS开发","slug":"iOS开发","permalink":"http://yoursite.com/tags/iOS开发/"}],"keywords":[{"name":"记录","slug":"记录","permalink":"http://yoursite.com/categories/记录/"}]},{"title":"iOS 右滑返回失效问题终极解决方案","slug":"iOS 右滑返回失效问题终极解决方案","date":"2019-04-20T07:46:57.000Z","updated":"2019-04-28T09:55:56.705Z","comments":true,"path":"2019/04/20/iOS 右滑返回失效问题终极解决方案/","link":"","permalink":"http://yoursite.com/2019/04/20/iOS 右滑返回失效问题终极解决方案/","excerpt":"","text":"iOS 的右滑返回是必不可少的一项功能，否则用户体验会大打折扣，但是会经常会碰到某些页面右滑返回失效的情况，下面记录一下解决各种情况下右滑返回失效的方法： 1. 自定义返回按钮如果页面上是自定义的返回按钮，那在viewDidLoad中加上下面这句话就可以： 1234- (void)viewDidLoad &#123; [super viewDidLoad]; self.navigationController.interactivePopGestureRecognizer.delegate = self;&#125; 如果想禁止右滑返回，那么需要在 1234- (void)viewDidAppear:(BOOL)animated &#123; [super viewDidAppear:animated]; [self.navigationController.interactivePopGestureRecognizer setEnabled:NO];&#125; 2. 在UIScrollview中失效 关于以UIScrollview为基类的控件：UITableView、UICollectionview、UIScrollview、UIwebview 等，在界面的最上面加个view，可完美解决一切关于右滑返回的手势冲突，如下： 123UIView *leftPanView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 20, [UIScreen mainScreen].bounds.size.height)]; leftPanView.backgroundColor = [UIColor clearColor]; [self.view addSubview:leftPanView]; 记得把view的颜色设置为透明~ 界面如下： 觉得好用的老铁记得点个赞哦~","categories":[{"name":"iOS开发","slug":"iOS开发","permalink":"http://yoursite.com/categories/iOS开发/"}],"tags":[{"name":"Objective_C","slug":"Objective-C","permalink":"http://yoursite.com/tags/Objective-C/"}],"keywords":[{"name":"iOS开发","slug":"iOS开发","permalink":"http://yoursite.com/categories/iOS开发/"}]},{"title":"iOS OC 血压计 蓝牙BLE4.0 设备连接 踩坑 开发","slug":"OC 血压计 蓝牙BLE4.0 链接踩坑开发","date":"2018-04-26T08:46:57.000Z","updated":"2019-04-28T09:50:25.005Z","comments":true,"path":"2018/04/26/OC 血压计 蓝牙BLE4.0 链接踩坑开发/","link":"","permalink":"http://yoursite.com/2018/04/26/OC 血压计 蓝牙BLE4.0 链接踩坑开发/","excerpt":"","text":"前言公司项目要连接第三方公司的血压计，由于从来没有做过和蓝牙有关的项目，好奇的心驱使下下也想顺便了解一下这方面的知识，于是主动向领导请求开发这个功能，经过4天的折腾，终于弄好了，（为什么要4天呢？TMD第三天才搞明白原来不是我代码不行，是他们给错文档了，MDZZ，强忍住骂娘的冲动。。。 蓝牙基础知识：名词解释：BLE:(Bluetooth low energy)蓝牙4.0设备因为低耗电,也叫BLEperipheral,central:外设和中心设备,发起链接的是central(一般是指手机),被链接的设备是peripheral(运动手环)service and characteristic:(服务和特征)每个设备会提供服务和特征,类似于服务端的API,但是结构不同.每个设备会有很多服务,每个服务中包含很多字段,这些字段的权限一般分为读(read),写(write),通知(notify)几种,就是我们连接设备后具体需要操作的内容Description:每个characteristic可以对应一个或者多个Description用于描述characteristic的信息或属性(eg.范围,计量单位) 蓝牙开发的2种模式：中心模式：就是以你的app作为中心,连接其他的外设的场景（本次项目使用，个人认为大部分的情况下都是这种模式）外设模式：使用手机作为外设连接其他中心设备操作的场景 服务和特征(service and characteristic)每个设备都会有1个or多个服务每个服务里都会有1个or多个特征特征就是具体键值对,提供数据的地方每个特征属性分为:读,写,通知等等 外设、服务（service）、特征（characteristic）的关系:建议需要蓝牙开发的小伙伴，先去App Store下载LightBlue这个软件，他的主要作用就是连接上蓝牙外设，并且告诉你，这个蓝牙设备都支持什么服务，每个服务下面有哪些特征，甚至还可以持续监听蓝牙设备发出的数据，你也可以向蓝牙设备写数据（经个人验证，本次开发血压计，写数据、监听数据都没有用，不知道是设备的问题，还是LightBlue的问题，但都无所谓了，毕竟有了服务和特征的UUID，它的任务就完成了……） 开发：主要流程思路：建立一个Central Manager实例进行蓝牙管理搜索外围设备连接外围设备获得外围设备的服务获得服务的特征从外围设备读数据给外围设备发送数据 上代码：注：本来想好好写写集成过程的代码，但是回头一想，集成代码出现在踩坑的文章中，好不专业，而且集成代码在网上搜索能搜索出一大堆，非常完整、全面，瞬间没有了写下去的动力，回头想想那就不重复造轮子了吧，附上一篇文章，过程大概就是这样：https://www.jianshu.com/p/87c30628ddaa作者辛苦！ 坑：下面主要说一下过程中遇到的坑： 1、搞准CBService的UUID连接好设备后，搜索CBService时候的UUID，开始做之前最好知道哪个服务的UUID是你需要的，这个第三方设备合作方或者蓝牙设备文档上面会告诉你。如果不知道服务的UUID，需要自己一个个试的话，那就要注意啦，因为设备上面有很多服务，可能有多个服务都具备读写属性甚至都支持通知，在这一步找到正确的UUID是十分关键的，如果这一步错了，后面肯定错。。。 2、查看特征支持找到服务之后要查看该服务下面的特征都支持什么属性，有了特征支持，就可以针对每个特征进行相应的操作。提供一个打印特征支持的方法： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263-(void)logCharacteristicProperties:(CBCharacteristicProperties)properties &#123;//查看特征支持if (properties &amp;CBCharacteristicPropertyBroadcast) &#123;//广播NSLog(@&quot;CBCharacteristicPropertyBroadcast&quot;);&#125;if (properties &amp;CBCharacteristicPropertyRead) &#123;//读NSLog(@&quot;CBCharacteristicPropertyRead&quot;);&#125;if (properties &amp;CBCharacteristicPropertyWriteWithoutResponse) &#123;//写-没有响应NSLog(@&quot;CBCharacteristicPropertyWriteWithoutResponse&quot;);&#125;if (properties &amp;CBCharacteristicPropertyWrite) &#123;//写NSLog(@&quot;CBCharacteristicPropertyWrite&quot;);&#125;if (properties &amp;CBCharacteristicPropertyNotify) &#123;//通知NSLog(@&quot;CBCharacteristicPropertyNotify&quot;);&#125;if (properties &amp;CBCharacteristicPropertyIndicate) &#123;//声明NSLog(@&quot;CBCharacteristicPropertyIndicate&quot;);&#125;if (properties &amp;CBCharacteristicPropertyAuthenticatedSignedWrites) &#123;//通过验证的NSLog(@&quot;CBCharacteristicPropertyAuthenticatedSignedWrites&quot;);&#125;if (properties &amp;CBCharacteristicPropertyExtendedProperties) &#123;//拓展NSLog(@&quot;CBCharacteristicPropertyExtendedProperties&quot;);&#125;if (properties &amp;CBCharacteristicPropertyNotifyEncryptionRequired) &#123;//需要加密的通知NSLog(@&quot;CBCharacteristicPropertyNotifyEncryptionRequired&quot;);&#125;if (properties &amp;CBCharacteristicPropertyIndicateEncryptionRequired) &#123;//需要加密的申明NSLog(@&quot;CBCharacteristicPropertyIndicateEncryptionRequired&quot;);&#125;&#125; 3、发送数据，无响应有些设备发送指令的时候会发现没有响应，甚至didWriteValueForCharacteristic回调的值都是空，这种情况的一个原因是：有些设备需要先建立连接，才能执行后续操作，这个链接不是之前的已经链接好的蓝牙，是需要向外设发送一个连接指令，就比如我这次做的血压计开发，直接发送开始测量指令是不好使的，必须得先发送链接指令，等血压计响应之后，再发开始测量指令。。。 一般情况下，我们发送的指令都是从字符串开始的，想发送给蓝牙，必须是NSData型，但好像转化的时候不是常见的转换方法， 附上发送的指令转换方法： //NSString类型转换成NSData12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061-(NSData*)stringToByte:(NSString*)string&#123;NSString *hexString=[[stringuppercaseString] stringByReplacingOccurrencesOfString:@&quot; &quot;withString:@&quot;&quot;];if ([hexString length]%2!=0) &#123;return nil;&#125;Byte tempbyt[1]=&#123;0&#125;;NSMutableData* bytes=[NSMutableDatadata];for(int i=0;i&lt;[hexStringlength];i++)&#123;unichar hex_char1 = [hexStringcharacterAtIndex:i]; ////两位16进制数中的第一位(高位*16)int int_ch1;if(hex_char1 &gt;= &apos;0&apos; &amp;&amp; hex_char1 &lt;=&apos;9&apos;)int_ch1 = (hex_char1-48)*16; //// 0 的Ascll - 48else if(hex_char1 &gt;= &apos;A&apos; &amp;&amp; hex_char1 &lt;=&apos;F&apos;)int_ch1 = (hex_char1-55)*16;//// A 的Ascll - 65elsereturn nil;i++;unichar hex_char2 = [hexStringcharacterAtIndex:i]; ///两位16进制数中的第二位(低位)int int_ch2;if(hex_char2 &gt;= &apos;0&apos; &amp;&amp; hex_char2 &lt;=&apos;9&apos;)int_ch2 = (hex_char2-48);//// 0 的Ascll - 48else if(hex_char2 &gt;= &apos;A&apos; &amp;&amp; hex_char2 &lt;=&apos;F&apos;)int_ch2 = hex_char2-55;//// A 的Ascll - 65elsereturn nil;tempbyt[0] = int_ch1+int_ch2; ///将转化后的数放入Byte数组里[bytes appendBytes:tempbytlength:1];&#125;return bytes;&#125; //NSData类型转换成NSString 123456789101112131415161718192021222324252627- (NSString*)hexadecimalString:(NSData *)data&#123;NSString* result;const unsignedchar* dataBuffer = (const unsigned char*)[data bytes];if(!dataBuffer)&#123;return nil;&#125;NSUInteger dataLength = [datalength];NSMutableString* hexString = [NSMutableStringstringWithCapacity:(dataLength * 2)];for(int i =0; i &lt; dataLength; i++)&#123;[hexString appendString:[NSStringstringWithFormat:@&quot;%02lx&quot;, (unsignedlong)dataBuffer[i]]];&#125;result = [NSString stringWithString:hexString];return result;&#125; 4、处理蓝牙接收的信息一般收到的信息都是十六进制的数值，具体代表什么意思，蓝牙开发文档已经都写好了，如果没有文档的话，我也不知道怎么办了十六进制转为十进制的方法： 1234567891011121314151617181920212223242526272829303132333435/**十六进制转化为十进制@param aHexString 需要转化的str@return 十进制数*/- (NSNumber *) numberHexString:(NSString *)aHexString&#123;// 为空,直接返回.if (nil == aHexString)&#123;return nil;&#125;NSScanner * scanner = [NSScannerscannerWithString:aHexString];unsigned long long longlongValue;[scanner scanHexLongLong:&amp;longlongValue];//将整数转换为NSNumber,存储到数组中,并返回.NSNumber * hexNumber = [NSNumbernumberWithLongLong:longlongValue];return hexNumber;&#125;","categories":[{"name":"iOS开发","slug":"iOS开发","permalink":"http://yoursite.com/categories/iOS开发/"}],"tags":[{"name":"Objective_C","slug":"Objective-C","permalink":"http://yoursite.com/tags/Objective-C/"}],"keywords":[{"name":"iOS开发","slug":"iOS开发","permalink":"http://yoursite.com/categories/iOS开发/"}]}]}